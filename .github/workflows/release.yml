name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  # 添加构建发布工件任务
  build_release:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest, macos-13]
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build release binary
        run: cargo build --release

      - name: Rename binary (Windows)
        if: matrix.os == 'windows-latest'
        run: move target\release\proxy-health-monitor.exe proxy-health-monitor-windows-x64.exe

      - name: Rename binary (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: mv target/release/proxy-health-monitor proxy-health-monitor-linux-x64

      - name: Rename binary (macOS ARM)
        if: matrix.os == 'macos-latest'
        run: mv target/release/proxy-health-monitor proxy-health-monitor-macos-arm64

      - name: Rename binary (macOS x64)
        if: matrix.os == 'macos-13'
        run: mv target/release/proxy-health-monitor proxy-health-monitor-macos-x64

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.os }}
          path: |
            proxy-health-monitor-*
          if-no-files-found: error

  # 添加发布任务
  release_publish:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: build_release
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir release_assets
          find artifacts -type f -exec cp {} release_assets \;
          ls release_assets

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release_assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}